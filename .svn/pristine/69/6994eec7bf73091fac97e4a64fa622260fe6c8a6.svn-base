import { Component } from '@angular/core';
import { NavController, MenuController, AlertController } from 'ionic-angular';
import { FileTransfer, FileTransferObject } from '@ionic-native/file-transfer';
import { File } from '@ionic-native/file';

@Component({
  selector: 'page-home',
  templateUrl: 'home.html'
})
export class HomePage {

  listaVideos:any[] = [
    {
      id: 1,
      nombre:'video1',
      url:'https://html5demos.com/assets/dizzy.mp4',
      imagen:''
    },
    {
      id: 2,
      nombre:'video2',
      url:'https://html5demos.com/assets/dizzy.mp4',
      imagen:''
    },
    {
      id: 3,
      nombre:'video3',
      url:'https://html5demos.com/assets/dizzy.mp4',
      imagen:''
    }
  ];

  constructor(public navCtrl: NavController, 
              private menuCtrl: MenuController, 
              private alertCtrl: AlertController, 
              private transfer: FileTransfer, 
              private file: File) {}

  reproducir(item:any){
    //FALTA VALIDAR SI YA ESTA DESCARGADO EL VIDEO

    let alert = this.alertCtrl.create({
      title: 'Confirmar descarga',
      message: 'Desea descargar el video?',
      enableBackdropDismiss: false, 
      buttons: [
        {
          text: 'No',
          role: 'No', // role es igual a null cuando se preciona el boton
          handler: () => {
            //NO HACER NADA
            console.log('preciono el boton NO');
          }
        },
        {
          text: 'Si',
          handler: () => {
            //DESCARGAR VIDEO
            
          }
        }
      ]
    });
    alert.present();
  }

  existeRuta(item:any){
    this.file.checkDir(this.file.externalDataDirectory, 'Videos').then(_ =>{
                      console.log('Directorio existe y verifica si existe archivo');

      this.file.checkFile(this.file.externalDataDirectory + 'Videos', item.nombre+'.mp4').then(_ => {
        //ALERTA DE QUE ARCHIVO YA HA SIDO DESCARGADO                  
        console.log('archivo existe');
        
          let alert = this.alertCtrl.create({
            title: 'Advertencia',
            subTitle: 'Este video ya ha sido descargado!!!',
            buttons: ['Dismiss']
          });
          alert.present();
                       
      }).catch(err => {
                        console.log('Archivo no existe, descargo archivo');
                        this.descargar(item);
      });

    }).catch(err => {
                    this.file.createDir(this.file.externalDataDirectory, 'Videos', false).then(() => {
                                        console.log('Directorio creado correctamente');
                                        this.descargar(item);
                    }).catch(() => {
                      console.log('Fallo al crear directorio');

                      let alert = this.alertCtrl.create({
                        title: 'Error',
                        subTitle: 'Hubo un eror al crear el directorio, intente mas tarde',
                        buttons: ['Dismiss']
                      });
                      alert.present();

                    });
    });
  }

  descargar(item:any) {
    
    let downloadProgress: any;
    const fileTransfer: FileTransferObject = this.transfer.create();
    const url = encodeURI(item.url);
    const targetPath = this.file.externalDataDirectory + 'Videos/' +item.nombre+'.mp4';
    
      fileTransfer.download(url, targetPath, true).then((entry) => {
        
        console.log('download complete: ' + entry.toURL());
            
        }, (error) => {
            console.log('Error fileTransfer: ' + JSON.stringify(error));
        });
        fileTransfer.onProgress((progress) => {
          console.log('fileTransfer.onProgress: '+JSON.stringify(progress));
        downloadProgress = Math.round((progress.loaded / progress.total) * 100) + '%';
            console.log('progress.loaded '+ progress.loaded);
            console.log('progress.total '+ progress.total);
            console.log('Downloading progress ...'+ downloadProgress);
        });
    
  }

  mostrarMenu(){
    this.menuCtrl.toggle();
  }

}
